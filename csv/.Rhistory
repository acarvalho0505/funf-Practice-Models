install.packages("ggmap")
install.packages("ggmap")
library(ggmap)
senseit_3_5 <- read_csv("senseit_3_5.csv")
gwd
cdw
gdw
setwd("/Users/Desktop/Faundry")
setwd("/Users/Desktop/faundry")
getwd()
setwd("/Users/dellpc/Desktop/found/funf-Practice-Models/")
senseit_3_5 <- read_csv("senseit_3_5.csv")
senseit_3_5 <- read_csv("senseit_3_5.csv")
setwd("Users/dellpc/Desktop/found/funf-Practice-Models/csv")
setwd("/Users/dellpc/Desktop/found/funf-Practice-Models/csv")
senseit_3_5 <- read_csv("senseit_3_5.csv")
senseit_3_5 <- read_csv("senseit_3_5")
senseit_3_5 <- read_csv("senseit_3_5.csv")
library(readr)
library(ggplot2)
senseit_3_5 <- read_csv("senseit_3_5.csv")
library(readr)
library(ggplot2)
library(RColorBrewer)
senseit_3_5 <- read_csv("senseit_3_5.csv")
sep<- split(senseit_3_5, f=senseit_3_5[, "Sensor"])
orientation=sep$`0`
location=sep$`1`
accelometer=sep$`2`
light=sep$`3`
sound=sep$`4`
location$Z = NULL
colnames(location)[2] = "latitude" #add column names
colnames(location)[3] = "longitude"
fd1<- location %>% filter(latitude<-33.911994 & longitude>18.418049)
foundry_data.frame<- filter(fd1, latitude> -33.912778 & longitude<18.419229)
foundry_data.frame
rowcheck  <- function(foundry_data.frame, location){
xx <- apply(foundry_data.frame, 1, paste, collapse = "")
yy <- apply(location, 1, paste, collapse = "")
zz <- xx %in% yy
return(zz)
}
match<- rowcheck(location, foundry_data.frame)
match = as.data.frame(match)
location = cbind(location, match)
colnames(location)[4] = "area"
location = location %>% mutate(area = ifelse(area == TRUE, "Foundry", "NA"))
location$seconds = 0
for(i in 1:nrow(location)){
location$seconds[i] = i
}
ggplot(location, aes(x = latitude, y = longitude, color = area)) + geom_point(alpha = 0.5)
library(ggplot2)
ggplot(location, aes(x = latitude, y = longitude, color = area)) + geom_point(alpha = 0.5)
ggplot(location, aes(x = latitude, y = longitude, color = area)) + geom_point(alpha = 0.5)
library(ggplot2)
ggplot(location, aes(x = latitude, y = longitude, color = area)) + geom_point(alpha = 0.5)
sep<- split(senseit_3_5, f=senseit_3_5[, "Sensor"])
orientation=sep$`0`
location=sep$`1`
accelometer=sep$`2`
light=sep$`3`
sound=sep$`4`
location$Z = NULL
colnames(location)[2] = "latitude" #add column names
colnames(location)[3] = "longitude"
fd1<- location %>% filter(latitude<-33.911994 & longitude>18.418049)
foundry_data.frame<- filter(fd1, latitude> -33.912778 & longitude<18.419229)
library(dplyr)
fd1<- location %>% filter(latitude<-33.911994 & longitude>18.418049)
fd1<- location %>% filter(latitude<-33.911994 & longitude>18.418049)
fd1<- location %>% filter(latitude<-33.911994 & longitude>18.418049)
library(readr)
library(ggplot2)
library(RColorBrewer)
senseit_3_5 <- read_csv("senseit_3_5.csv")
sep<- split(senseit_3_5, f=senseit_3_5[, "Sensor"])
orientation=sep$`0`
location=sep$`1`
accelometer=sep$`2`
light=sep$`3`
sound=sep$`4`
location$Z = NULL
colnames(location)[2] = "latitude" #add column names
colnames(location)[3] = "longitude"
fd1<- location %>% filter(latitude<-33.911994 & longitude>18.418049)
foundry_data.frame<- filter(fd1, latitude> -33.912778 & longitude<18.419229)
fd1<- location %>% filter(latitude< -33.911994 & longitude>18.418049)
fd1<- location %>% filter(latitude< -33.911994 & longitude>18.418049)
foundry_data.frame<- filter(fd1, latitude> -33.912778 & longitude<18.419229)
foundry_data.frame
rowcheck  <- function(foundry_data.frame, location){
xx <- apply(foundry_data.frame, 1, paste, collapse = "")
yy <- apply(location, 1, paste, collapse = "")
zz <- xx %in% yy
return(zz)
}
match<- rowcheck(location, foundry_data.frame)
match = as.data.frame(match)
location = cbind(location, match)
colnames(location)[4] = "area"
location = location %>% mutate(area = ifelse(area == TRUE, "Foundry", "NA"))
location$seconds = 0
for(i in 1:nrow(location)){
location$seconds[i] = i
}
library(ggplot2)
ggplot(location, aes(x = latitude, y = longitude, color = area)) + geom_point(alpha = 0.5)
ggplot(location, aes(x = area, fill = area)) + geom_bar() #we can visualize how much time a person spends at a
ggplot(location, aes(x = area, fill = area)) + geom_bar() #we can visualize how much time a person spends at a
install.packages("ggmap")
library(ggmap)
cape_town = get_map(location = c(18.37,-33.92,18.470,-33.905), maptype = "roadmap")
cape_town = get_map(location = c(18.37,-33.92,18.470,-33.905), maptype = "roadmap")
get_map(location = c(18.37,-33.92,18.470,-33.905), maptype = "roadmap")
get_map(location = c(18.37,-33.92,18.470,-33.905), maptype = "roadmap")
library(ggmap)
get_map(location = c(18.37,-33.92,18.470,-33.905), maptype = "roadmap")
cape_town = get_map(location = c(18.37,-33.92,18.470,-33.905), maptype = "roadmap")
foundry_map = ggmap(cape_town) + geom_point(aes(x = longitude, y = latitude, color = area), data = location, size = .5)
time_map = ggmap(cape_town) + geom_point(aes(x = longitude, y = latitude, color = seconds), data = location, size = .5)
library(ggmap)
cape_town = get_map(location = c(18.37,-33.92,18.470,-33.905), maptype = "roadmap")
ggmap(cape_town)
foundry_map = ggmap(cape_town) + geom_point(aes(x = longitude, y = latitude, color = area), data = location, size = .5)
ggmap(foundry_map)
foundry_map = ggmap(cape_town) + geom_point(aes(x = longitude, y = latitude, color = area), data = location, size = .5)
foundry_map
time_map = ggmap(cape_town) + geom_point(aes(x = longitude, y = latitude, color = seconds), data = location, size = .5)
time_map = ggmap(cape_town) + geom_point(aes(x = longitude, y = latitude, color = seconds), data = location, size = .5)
time_map
time_map
